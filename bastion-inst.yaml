- name: Setup Bastion Host
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Import VPC Var
      include_vars: Variables/vpc_setup

    - name: Import VPC Var
      include_vars: Variables/output_vars
    - name: Import Stack 
      include_vars: Variables/stack-setup      

    - name: create a new EC2 key pair
      amazon.aws.ec2_key:
        name: bastion
        region: "{{region}}"
      connection: local
      register: keyout

    - name: store login key
      copy:
        content: "{{keyout.key.private_key}}"
        dest: ./bastion.pem
      when: keyout.changed
    
    - name: create SG
      amazon.aws.ec2_security_group:
        name: Bastion_SG
        description: security group for Basion Ins
        vpc_id: "{{vpcid}}"
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{MYIP}}"
      register: BastionSG_out

    - name: Check if EC2 instance exists
      amazon.aws.ec2_instance_info:
        region: "{{region}}"
        filters:
          "tag:Name": Bastion_host
      register: ec2_info

    - name: Create Ec2
      amazon.aws.ec2_instance:
        key_name: bastion
        instance_type: "{{instance_type}}"
        image_id: "{{bastion_ami}}" 
        region: "{{region}}"
        purge_tags: true
        wait: true
        wait_timeout: 300
        exact_count: 1
        tags:
          Name: "Bastion_host"
          Project: Basrtion
        security_group: "Bastion_SG"
        vpc_subnet_id: "{{pubsub1id}}"
      register: bastionHost_out 
      when: ec2_info.instances == []

    - name: Insert/Update 
      ansible.builtin.blockinfile:
        path: Variables/output_vars
        block: |
          BastionSGid: {{  BastionSG_out.group_id }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK {mark}"

    - name: Remove comment from file
      lineinfile:
        path: Variables/output_vars
        state: absent
        regexp: '# BEGIN ANSIBLE MANAGED BLOCK|# END ANSIBLE MANAGED BLOCK'